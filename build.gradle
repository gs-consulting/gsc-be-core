plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'jp.co.goalist'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
    mapstructVersion = '1.6.3'
    lombokVersion = '1.18.36'
    lombokMapstructBindingVerion = '0.2.0'
    jjwtVersion = '0.12.6'
    dotEnvVersion = '4.0.0'
    swaggerVersion = '2.2.27'
    //springdocVersion = '2.6.0'
    liquibaseVersion = '4.30.0'
    hibernateJCacheVersion = '6.6.5.Final'
    ehcacheVersion = '3.10.8'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2024.0.0"
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    
    // feign client
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// database
    implementation "org.liquibase:liquibase-core:${liquibaseVersion}"
    runtimeOnly 'com.mysql:mysql-connector-j'

    // CSV
    implementation 'org.apache.commons:commons-csv:1.10.0'

    // Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    // Spring-dotenv for .env file, no need in docker but for local development
    implementation "me.paulschwarz:spring-dotenv:${dotEnvVersion}"

    // JWT
    implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

    // lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    // Mapstruct
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"

    // devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-annotations
    implementation "io.swagger.core.v3:swagger-annotations:${swaggerVersion}"

    // cache
    implementation "org.hibernate.orm:hibernate-jcache:${hibernateJCacheVersion}"
    implementation "org.ehcache:ehcache:${ehcacheVersion}:jakarta"

    // place in order to avoid error
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVerion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
}

tasks.named('test') {
	useJUnitPlatform()
}
