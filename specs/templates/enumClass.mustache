  /**
   * {{^description}}Gets or Sets {{{name}}}{{/description}}{{{description}}}
   */
  {{>additionalEnumTypeAnnotations}}public enum {{#vendorExtensions.x-enum-classname}}{{vendorExtensions.x-enum-classname}}{{/vendorExtensions.x-enum-classname}}{{^vendorExtensions.x-enum-classname}}{{{datatypeWithEnum}}}{{^datatypeWithEnum}}{{classname}}{{/datatypeWithEnum}}{{/vendorExtensions.x-enum-classname}} {
    {{#gson}}
        {{#allowableValues}}
            {{#enumVars}}
    @SerializedName({{#isInteger}}"{{/isInteger}}{{#isDouble}}"{{/isDouble}}{{#isLong}}"{{/isLong}}{{#isFloat}}"{{/isFloat}}{{{value}}}{{#isInteger}}"{{/isInteger}}{{#isDouble}}"{{/isDouble}}{{#isLong}}"{{/isLong}}{{#isFloat}}"{{/isFloat}})
    
    {{{name}}}("{{{name}}}", {{{value}}}){{^-last}},
    {{/-last}}{{#-last}};{{/-last}}
            {{/enumVars}}
        {{/allowableValues}}
    {{/gson}}
    {{^gson}}
        {{#allowableValues}}
            {{#enumVars}}

    {{{name}}}("{{{name}}}", {{{value}}}){{^-last}},
    {{/-last}}{{#-last}};{{/-last}}
            {{/enumVars}}
        {{/allowableValues}}
    {{/gson}}

    private String id;
    private String name;

    {{#vendorExtensions.x-enum-classname}}{{vendorExtensions.x-enum-classname}}{{/vendorExtensions.x-enum-classname}}{{^vendorExtensions.x-enum-classname}}{{{datatypeWithEnum}}}{{^datatypeWithEnum}}{{classname}}{{/datatypeWithEnum}}{{/vendorExtensions.x-enum-classname}}(String id, String name) {
        this.id = id;
        this.name = name;
    }

    {{#jackson}}
    @JsonValue
    {{/jackson}}
    public String getId() {
        return id;
    }

    {{#jackson}}
    @JsonValue
    {{/jackson}}
    public String getName() {
        return name;
    }

    @Override
    public String toString() {
      return String.valueOf(name);
    }

    @JsonCreator
    public static {{#vendorExtensions.x-enum-classname}}{{vendorExtensions.x-enum-classname}}{{/vendorExtensions.x-enum-classname}}{{^vendorExtensions.x-enum-classname}}{{{datatypeWithEnum}}}{{^datatypeWithEnum}}{{classname}}{{/datatypeWithEnum}}{{/vendorExtensions.x-enum-classname}} fromValue({{{dataType}}} id) {
      for ({{#vendorExtensions.x-enum-classname}}{{vendorExtensions.x-enum-classname}}{{/vendorExtensions.x-enum-classname}}{{^vendorExtensions.x-enum-classname}}{{{datatypeWithEnum}}}{{^datatypeWithEnum}}{{classname}}{{/datatypeWithEnum}}{{/vendorExtensions.x-enum-classname}} b : {{#vendorExtensions.x-enum-classname}}{{vendorExtensions.x-enum-classname}}{{/vendorExtensions.x-enum-classname}}{{^vendorExtensions.x-enum-classname}}{{{datatypeWithEnum}}}{{^datatypeWithEnum}}{{classname}}{{/datatypeWithEnum}}{{/vendorExtensions.x-enum-classname}}.values()) {
        if (b.id.{{^isString}}equals{{/isString}}{{#isString}}{{#useEnumCaseInsensitive}}equalsIgnoreCase{{/useEnumCaseInsensitive}}{{^useEnumCaseInsensitive}}equals{{/useEnumCaseInsensitive}}{{/isString}}(id)) {
          return b;
        }
      }
      {{#isNullable}}return null;{{/isNullable}}{{^isNullable}}throw new IllegalArgumentException("Unexpected value '" + id + "'");{{/isNullable}}
    }
  }